---
import { localizePath } from "astro-i18next";
import Image from "./Image.astro";
import ImageNotFound from "./ImageNotFound.astro";

const { project, useCustomColour } = Astro.props;

const cardBg = useCustomColour
    ? `hsl(var(--colors-${project.colour}100)) !important`
    : undefined;
---

<div class="card" role="gridcell">
    <a class="link" href={localizePath(`project/${project.slug}`)}>
        <div class="image-container">
            {
                project.mainImage ? (
                    <Image
                        src={project.mainImage}
                        width={1333}
                        height={2000}
                        fillContainer
                    />
                ) : (
                    <ImageNotFound />
                )
            }
        </div>
        <div class="label-container">
            <h2>{project.title}</h2>
            <p>{project.description}</p>
        </div>
    </a>
</div>

<style lang="scss" define:vars={{ cardBg }}>
    .card {
        display: flex;
        flex-direction: column;
        background: var(--cardBg);
        border-radius: var(--radii-md);
        overflow: hidden;

        &:hover {
            .image-container {
                :global(> img) {
                    scale: 1.05;
                }
            }

            .label-container {
                opacity: 1;
                visibility: visible;
            }
        }
    }

    .link {
        display: block;
        position: relative;
        width: 100%;
        height: 100%;
        cursor: pointer;
    }

    .image-container {
        width: 100%;
        height: 100%;
        border-radius: var(--radii-md);
        overflow: hidden;

        :global(> img) {
            scale: 1;
            transition: scale 0.375s cubic-bezier(0.43, 0.13, 0.23, 0.96);
        }
    }

    .label-container {
        display: flex;
        flex-direction: row;
        align-items: baseline;
        gap: var(--spaces-1);
        position: absolute;
        bottom: var(--spaces-1);
        inset-inline: var(--spaces-1);
        padding-inline: var(--spaces-2);
        padding-block: var(--spaces-1);
        border-radius: var(--radii-sm);
        background: hsl(var(--colors-bg) / 75%);
        backdrop-filter: blur(25px);

        opacity: 0;
        visibility: hidden;
        transition: opacity 0.2s cubic-bezier(0.33, 1, 0.68, 1),
            visibility 0.2s cubic-bezier(0.33, 1, 0.68, 1);

        h2,
        p {
            margin: 0;
            font-family: var(--fonts-display);
        }
        h2 {
            font-size: 1rem;
        }
        p {
            font-size: 0.9rem;
        }
    }

    @media only screen and (width <= 640px) {
        .label-container {
            opacity: 1;
            visibility: visible;
        }
    }
</style>
