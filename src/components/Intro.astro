---
import type { Home } from "../../lib/types";

export interface Props {
    homepage: Home;
}
const { homepage } = Astro.props;
---

<div is="intro-background">
    <div class="textContainer">
        <h1 class="heading" role="heading">{homepage.title}</h1>
        <p class="paragraph">{homepage.description}</p>
    </div>

    <svg
        class="svg"
        viewBox="0 0 1384 786"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
    >
        <image
            href="/images/headshot.webp"
            x="769"
            y="0"
            width={756}
            height={1133}
            clip-path="url(#clipHeadshot)"
        />
        <rect
            style={{
                stroke: "rgb(var(--colors-gray900))",
                rx: "var(--radii-md)",
            }}
            x="4"
            y="54"
            width="1376"
            height="728"
            stroke-opacity="0.1"
            stroke-width="8"></rect>
        <defs>
            <clipPath id="clipBlobs">
                <rect
                    style={{ rx: "var(--radii-md)" }}
                    y="50"
                    width="1384"
                    height="736"
                    fill="white"></rect>
            </clipPath>
            <clipPath id="clipHeadshot">
                <rect
                    style={{ rx: "var(--radii-md)" }}
                    width="1384"
                    height="786"
                    fill="white"></rect>
            </clipPath>
        </defs>
    </svg>
</div>

<script>
    class IntroBackground extends HTMLDivElement {
        constructor() {
            super();

            let div = this;

            const divBounds = div.getBoundingClientRect();

            div.addEventListener("mousemove", (e) => {
                const x = (e.pageX - divBounds.x) / divBounds.width;
                const y = (e.pageY - divBounds.y) / divBounds.height;

                console.log("x:", x, "y:", y);

                div.style.setProperty("--cursor-x", String(x));
                div.style.setProperty("--cursor-y", String(y));
            });

            div.addEventListener("mouseout", (e) => {
                div.style.removeProperty("--cursor-x");
                div.style.removeProperty("--cursor-y");
            });
        }
    }

    customElements.define("intro-background", IntroBackground, {
        extends: "div",
    });
</script>

<style lang="scss">
    div[is="intro-background"] {
        --cursor-y: 0.7;
        --cursor-x: 0.7;

        &:before {
            content: "";
            display: block;
            width: 100%;
            height: 100%;
            position: absolute;
            inset: 0;
            z-index: -1;

            border-radius: var(--radii-md);
            overflow: hidden;

            will-change: background, opacity;
            transition: opacity 600ms ease 0s;
            background: radial-gradient(
                    circle farthest-side at calc((var(--cursor-x) + 0.2) * 100%)
                        calc((var(--cursor-y) - 0.1) * 100%),
                    rgb(var(--colors-green200)) 0%,
                    transparent 60%
                ),
                radial-gradient(
                    circle farthest-side at calc((var(--cursor-x) - 0.3) * 100%)
                        calc((var(--cursor-y) + 0.1) * 100%),
                    rgb(var(--colors-purple300)) 0%,
                    transparent 60%
                ),
                radial-gradient(
                    circle farthest-side at calc((var(--cursor-x) - 0.1) * 100%)
                        calc((var(--cursor-y) + 0.1) * 100%),
                    rgb(var(--colors-blue300)) 0%,
                    transparent 60%
                );
            // background: radial-gradient(
            //     circle farthest-side at calc(var(--cursor-x) * 100%)
            //         calc(var(--cursor-y) * 100%),
            //     var(--colors-secondary) 0%,
            //     transparent 100%
            // );
        }
    }

    div.textContainer {
        position: absolute;
        bottom: var(--spaces-3);
        left: var(--spaces-3);
        max-width: 60%;
        display: flex;
        flex-direction: column;
        gap: var(--spaces-2);
    }

    .heading {
        margin: 0;
        font-size: 5rem;
        line-height: 1.1;
    }

    .paragraph {
        margin: 0;
        font-size: 1.25rem;
    }

    .svg {
        position: absolute;
        inset-inline: 0;
        inset-block-start: -6.75%; // It is slightly taller to accommodate the hair
        inset-block-end: 0;
        z-index: -1;
    }
</style>
