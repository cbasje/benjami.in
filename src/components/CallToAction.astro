---
import { Icon } from "astro-icon";
import type { Home } from "../../lib/types";

export interface Props {
    homepage: Home;
}
const { homepage } = Astro.props;
---

<blur-background role="none">
    <svg
        class="svg"
        viewBox="0 0 1384 658"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
    >
        <rect
            style={{
                stroke: "rgb(var(--colors-gray900))",
                rx: "var(--radii-md)",
            }}
            x="4"
            y="4"
            width="1376"
            height="650"
            stroke-opacity="0.1"
            stroke-width="8"></rect>
        <defs>
            <clip-path id="clip0_545_173">
                <rect
                    width="1384"
                    height="658"
                    fill="white"
                    style={{
                        rx: "var(--radii-md)",
                    }}></rect>
            </clip-path>
        </defs>
    </svg>

    <a
        class="button variant-black size-large"
        href="mailto:Sebastiaan Benjamins <sebas@benjami.in>"
    >
        <div role="none">
            <span>{homepage.callToAction ?? "Let's talk"}</span>
            <Icon
                name="ph:envelope-simple-bold"
                style={{
                    width: "32px",
                    height: "32px",
                }}
                aria-hidden
            />
        </div>
    </a>
</blur-background>

<style lang="scss">
    blur-background {
        display: flex;
        justify-content: center;
        align-items: center;

        a.button {
            mix-blend-mode: multiply;

            > div {
                display: flex;
                flex-direction: row;
                align-items: center;
                gap: var(--spaces-2);
            }
        }

        &:has(a.button:active)::before {
            opacity: 1;
        }

        --cursor-y: 0.5;
        --cursor-x: 0.5;

        &:before {
            content: "";
            display: block;
            width: 100%;
            height: 100%;
            position: absolute;
            inset: 0;
            z-index: -1;

            opacity: 0.5;
            border-radius: var(--radii-md);
            overflow: hidden;

            will-change: background, opacity;
            transition: opacity 0.375s cubic-bezier(0.43, 0.13, 0.23, 0.96);
            background: radial-gradient(
                    circle farthest-side at calc((var(--cursor-x) + 0.2) * 100%)
                        calc((var(--cursor-y) - 0.1) * 100%),
                    rgb(var(--colors-green200)) 0%,
                    transparent 60%
                ),
                radial-gradient(
                    circle farthest-side at calc((var(--cursor-x) - 0.3) * 100%)
                        calc((var(--cursor-y) + 0.1) * 100%),
                    rgb(var(--colors-purple300)) 0%,
                    transparent 60%
                ),
                radial-gradient(
                    circle farthest-side at calc((var(--cursor-x) - 0.1) * 100%)
                        calc((var(--cursor-y) + 0.1) * 100%),
                    rgb(var(--colors-blue300)) 0%,
                    transparent 60%
                );
        }

        > svg {
            position: absolute;
            inset: 0;
            z-index: -1;
        }
    }
</style>
