---
import { astroI18n, l } from "astro-i18n";
import { Icon } from "astro-icon";
import type { Seo } from "../../lib/types";
import MainLayout from "./main.astro";

astroI18n.init(Astro);

export interface Props {
    colour?: string;
    seo?: Omit<Seo, "_type">;
}
const { colour, seo } = Astro.props;

const themeAccent1 = colour ? `var(--color-${colour}-5)` : undefined;
---

<MainLayout seo={seo}>
    <div>
        <a
            href={l("/")}
            class="overlay"
            style={{ cursor: "initial" }}
            aria-hidden></a>

        <a href={l("/")} class="button icon-button" aria-label="Close">
            <Icon name="ph:x-bold" aria-hidden />
        </a>

        <main class="content-container">
            <article>
                <slot />
            </article>
        </main>
    </div>
</MainLayout>

<script>
    import { animate } from "motion";

    animate(
        ".content-container",
        {
            transform: ["translateY(150px)", "none"],
            opacity: [0, 1],
        },
        { duration: 0.375, easing: [0.43, 0.13, 0.23, 0.96] }
    );
</script>

<style lang="scss" define:vars={{ "theme-accent-1": themeAccent1 }}>
    .overlay {
        position: fixed;
        inset: 0;
        z-index: var(--layer-1);
        background-color: var(--theme-accent-1);
        opacity: 25%;
    }

    .icon-button {
        width: var(--size-8);
        height: var(--size-8);
        padding: 0;

        display: inline-flex;
        align-items: center;
        justify-content: center;

        border-radius: var(--radius-round);
        background-color: var(--theme-accent-1);
        color: var(--theme-text-2);

        position: fixed;
        right: var(--size-3);
        top: var(--size-3);
        z-index: var(--layer-3);

        > svg {
            width: var(--font-size-4);
            height: var(--font-size-4);
        }
    }

    .content-container {
        background-color: var(--theme-surface-1);
        border-top-left-radius: var(--radius-3);
        border-top-right-radius: var(--radius-3);
        margin-top: var(--size-10);
        width: 100%;
        min-height: 100vh;
        position: relative;
        overflow-y: scroll;
        z-index: var(--layer-2);

        // Set for animation
        transform: translateY(150px);
        opacity: 0;

        &:focus {
            outline: none;
        }

        article {
            width: 100%;
            margin-inline: auto;
            padding-inline: var(--size-3);
            padding-block: var(--size-fluid-7);

            display: flex;
            flex-direction: column;
            justify-content: flex-start;
            align-items: center;
            gap: var(--size-8);
        }
    }

    @media (--md-n-above) {
        article {
            gap: var(--size-10);
        }
    }
</style>
