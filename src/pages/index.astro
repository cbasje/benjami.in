---
import { useSanityClient } from "astro-sanity";
import i18next, { changeLanguage } from "i18next";

import { homeQuery, projectListQuery } from "../../lib/queries";
import type { Home, Project } from "../../lib/types";

import CallToAction from "../components/CallToAction.astro";
import Footer from "../components/Footer.astro";
import Header from "../components/Header.astro";
import Intro from "../components/Intro.astro";
import ProjectGrid from "../components/ProjectGrid.astro";
import MainLayout from "../layouts/main.astro";

changeLanguage("en");

const projects: Project[] = await useSanityClient().fetch(projectListQuery, {
    locale: i18next.language,
});
const homepage: Home = await useSanityClient().fetch(homeQuery, {
    locale: i18next.language,
});
---

<MainLayout seo={homepage.seo}>
    <Header />

    <main class="main">
        <section class="section for-intro">
            <Intro homepage={homepage} />
        </section>

        <section class="section for-projects">
            <ProjectGrid projects={projects} />
        </section>

        <section class="section for-intro">
            <CallToAction homepage={homepage} />
        </section>

        <Footer />
    </main>
</MainLayout>

<script>
    import { animate, stagger } from "motion";

    animate(
        "main > .section",
        {
            transform: ["translateY(150px)", "none"],
            opacity: [0, 0.7],
        },
        {
            duration: 0.375,
            easing: [0.43, 0.13, 0.23, 0.96],
            delay: stagger(0.125),
        }
    );
</script>

<style lang="scss">
    .main {
        width: 100vw;
        margin-inline: auto;
        padding-inline: var(--spaces-2);

        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        gap: var(--spaces-6);

        > :global(*) {
            width: 100%;
            max-width: 1024px;
        }
    }

    .section {
        width: 100%;
        height: auto;
        position: relative;

        // Set for animation
        transform: translateY(150px);
        opacity: 0;

        filter: grayscale(100%);
        transition: filter 0.8s cubic-bezier(0.33, 1, 0.68, 1),
            opacity 0.8s cubic-bezier(0.33, 1, 0.68, 1);

        &:hover {
            opacity: 1 !important;
            filter: grayscale(0%);
        }

        & > :global(*) {
            width: 100%;
            height: 100%;
            position: relative;
        }

        &.for-intro {
            aspect-ratio: 1.88;
        }
        &.for-projects {
            aspect-ratio: 1.85;
        }
        &.for-calltoaction {
            aspect-ratio: 2.11;
        }
    }
</style>
