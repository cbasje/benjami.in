---
import { SEO as SeoHead } from "astro-seo";
import { ViewTransitions } from "astro:transitions";
import { getDataEntryById, type CollectionEntry } from "astro:content";
import type { Seo } from "../content/config";
import { defaultLocale, locales, type Locale } from "../i18n/ui";
import { useTranslatedPath, useTranslations } from "../i18n/utils";
import "../styles/global.scss";

const locale = (Astro.params.locale as Locale) ?? defaultLocale;

const t = useTranslations(locale);
const l = useTranslatedPath(locale);

const currentUrl = Astro.url;

export interface Props {
    seo?: Seo;
}

const { seo } = Astro.props;

const {
    siteName,
    siteKeywords,
    defaultSeo,
}: CollectionEntry<"global">["data"] = (
    await getDataEntryById("global", locale)
).data;

const seoWithDefaults: Seo = {
    ...defaultSeo,
    ...seo,
};

const fullSeo = {
    ...seoWithDefaults,
    metaTitle:
        seoWithDefaults.metaTitle === siteName
            ? siteName
            : `${seoWithDefaults.metaTitle} | ${siteName}`,
    siteKeywords: siteKeywords ?? "",
};

// FIXME:
// const getImage = (src: Image, type?: "twitter") => {
//     return builder
//         .image(src.asset._ref)
//         .width(type === "twitter" ? 1280 : 1200)
//         .height(type === "twitter" ? 640 : 630)
//         .auto("format")
//         .format("png")
//         .fit("max")
//         .url();
// };
---

<head>
    <meta charset="UTF-8" />
    <SeoHead
        title={fullSeo.metaTitle}
        description={fullSeo.metaDescription}
        openGraph={{
            basic: {
                type: fullSeo.isArticle ? "article" : "website",
                title: seoWithDefaults.metaTitle,
                // TODO: image: fullSeo.shareImage ? getImage(fullSeo.shareImage) : "",
                image: fullSeo.shareImage?.url ?? "",
                url: currentUrl.href,
            },
            optional: {
                description: fullSeo.metaDescription,
                siteName: import.meta.env.SITE,
            },
            image: fullSeo.shareImage
                ? {
                      //   TODO: secureUrl: getImage(fullSeo.shareImage),
                      secureUrl: fullSeo.shareImage.url ?? "",
                      width: 1280,
                      height: 640,
                      alt: fullSeo.shareImage.alt,
                  }
                : undefined,
        }}
        twitter={{
            title: fullSeo.metaTitle,
            description: fullSeo.metaDescription,
            card: "summary_large_image",
            site: "@cbasje",
            creator: "@cbasje",
            // image: fullSeo.shareImage
            //     ? getImage(fullSeo.shareImage, "twitter")
            //     : "",
            imageAlt: fullSeo.shareImage?.alt,
        }}
        extend={{
            link: [{ rel: "shortcut icon", href: "/favicon.ico" }],
            meta: [
                { name: "author", content: "Sebastiaan Benjamins" },
                { name: "keywords", content: fullSeo.siteKeywords },
                {
                    name: "viewport",
                    content: "width=device-width, initial-scale=1.0",
                },
                { name: "theme-color", content: "#F9FAFB" },
                { name: "generator", content: Astro.generator },
            ],
        }}
    />

    {
        locales.map((code) => (
            <link
                rel="alternate"
                hreflang={code}
                href={currentUrl.host + l(currentUrl.pathname, code)}
            />
        ))
    }

    <ViewTransitions />
</head>
