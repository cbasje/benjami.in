---
import type { Project } from "../../lib/types";
import ProjectCard from "./ProjectCard.astro";
import { css } from "../stitches.config";

export interface Props {
    projects: Project[];
}
const { projects } = Astro.props;

const grid = css({
    "& > :first-child": {
        gridArea: "main",
        $$cardBg: "rgb($colors$purple100)",
    },
    "& > :nth-child(2)": {
        gridArea: "side-up",
        $$cardBg: "rgb($colors$green100)",
    },
    "& > :nth-child(3)": {
        gridArea: "side-down",
        $$cardBg: "rgb($colors$blue100)",
    },

    variants: {
        type: {
            linear: {
                display: "flex",
                flexDirection: "column",
                justifyContent: "stretch",
                gap: "$2",
            },
            masonry: {
                display: "grid",
                gridTemplateColumns: "repeat(2, 1fr)",
                gridTemplateRows: "repeat(2, 1fr)",
                gridTemplateAreas: "'main side-up' 'main side-down'",
                gridGap: "$2",
                alignItems: "stretch",
            },
        },
    },
});
---

<div
    class={grid({
        type: { "@initial": "masonry", "@sm": "linear" },
    })}
    role="grid"
>
    {
        projects.map((project: Project, i: number) => (
            <ProjectCard
                project={project}
                useCustomColour={projects.every((p) => !!p.colour)}
                key={project.slug}
            />
        ))
    }
</div>
