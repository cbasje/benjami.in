---
import { astroI18n, l } from "astro-i18n";
import { useSanityClient } from "astro-sanity";
import { SEO } from "astro-seo";
import { globalQuery } from "../../lib/queries";
import { urlForImage } from "../../lib/sanity";
import type { GlobalSeo, Image, Seo } from "../../lib/types";
import "../styles/global.scss";

astroI18n.init(Astro);
const { langCodes } = astroI18n;
const currentUrl = Astro.url;

export interface Props {
    seo?: Omit<Seo, "_type">;
}

const { seo } = Astro.props;

const { siteName, siteKeywords, defaultSeo }: GlobalSeo =
    await useSanityClient().fetch(globalQuery, {
        locale: astroI18n.langCode,
    });

const seoWithDefaults: Seo = {
    ...defaultSeo,
    ...seo,
};

const fullSeo = {
    ...seoWithDefaults,
    metaTitle:
        seoWithDefaults.metaTitle === siteName
            ? siteName
            : `${seoWithDefaults.metaTitle} | ${siteName}`,
    siteKeywords: siteKeywords ?? "",
};

const getImage = (src: Image, type?: "twitter") => {
    return urlForImage(src.asset._ref)
        .width(type === "twitter" ? 1280 : 1200)
        .height(type === "twitter" ? 640 : 630)
        .auto("format")
        .format("png")
        .fit("max")
        .url();
};
---

<head>
    <meta charset="UTF-8" />
    <SEO
        title={fullSeo.metaTitle}
        description={fullSeo.metaDescription}
        openGraph={{
            basic: {
                type: fullSeo.isArticle ? "article" : "website",
                title: seoWithDefaults.metaTitle,
                image: fullSeo.shareImage ? getImage(fullSeo.shareImage) : "",
                url: currentUrl.href,
            },
            optional: {
                description: fullSeo.metaDescription,
                siteName: import.meta.env.SITE,
            },
            image: fullSeo.shareImage
                ? {
                      secureUrl: getImage(fullSeo.shareImage),
                      width: 1280,
                      height: 640,
                      alt: fullSeo.shareImage.alt,
                  }
                : undefined,
        }}
        twitter={{
            card: "summary",
            site: "@cbasje",
            creator: "@cbasje",
            image: fullSeo.shareImage
                ? getImage(fullSeo.shareImage, "twitter")
                : "",
        }}
        extend={{
            link: [{ rel: "shortcut icon", href: "/favicon.ico" }],
            meta: [
                { name: "author", content: "Sebastiaan Benjamins" },
                { name: "keywords", content: fullSeo.siteKeywords },
                {
                    name: "viewport",
                    content: "width=device-width, initial-scale=1.0",
                },
                { name: "theme-color", content: "#F9FAFB" },
                { name: "generator", content: Astro.generator },
            ],
        }}
    />

    {
        langCodes.map((code) => (
            <link
                rel="alternate"
                hreflang={code}
                href={currentUrl.host + l(currentUrl.pathname, {}, code)}
            />
        ))
    }
</head>
