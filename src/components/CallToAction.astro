---
import { Icon } from "astro-icon";
import type { Home } from "../../lib/types";

export interface Props {
    homepage: Home;
}
const { homepage } = Astro.props;
---

<blur-background role="none">
    <a
        class="button variant-black size-large"
        href="mailto:Sebastiaan Benjamins <sebas@benjami.in>"
    >
        <div role="none">
            <span>{homepage.callToAction ?? "Let's talk"}</span>
            <Icon
                name="ph:envelope-simple-bold"
                style={{
                    width: "32px",
                    height: "32px",
                }}
                aria-hidden
            />
        </div>
    </a>
</blur-background>

<style lang="scss">
    blur-background {
        display: flex;
        justify-content: center;
        align-items: center;

        box-sizing: border-box;
        background-clip: padding-box;

        --border-size: 6px;
        border: var(--border-size) solid hsl(0 0 0 / 10%);
        border-radius: var(--radii-md);

        a.button {
            mix-blend-mode: multiply;

            > div {
                display: flex;
                flex-direction: row;
                align-items: center;
                gap: var(--spaces-2);
            }
        }

        &:has(a.button:active)::before {
            opacity: 1;
        }

        --cursor-y: 0.5;
        --cursor-x: 0.5;

        --primary: var(--colors-purple800);
        --secondary: var(--colors-green900);
        --tertiary: var(--colors-blue800);

        &:before {
            content: "";
            display: block;
            width: calc(100% + var(--border-size) * 2);
            height: calc(100% + var(--border-size) * 2);
            position: absolute;
            inset: calc(var(--border-size) * -1);
            z-index: -1;

            opacity: 0.5;
            border-radius: var(--radii-md);
            overflow: hidden;

            will-change: background, opacity;
            transition: opacity 0.375s cubic-bezier(0.43, 0.13, 0.23, 0.96);
            background: radial-gradient(
                    circle farthest-side at calc((var(--cursor-x) - 0.3) * 100%)
                        calc((var(--cursor-y) + 0.1) * 100%),
                    hsl(var(--primary)) 0%,
                    transparent 60%
                ),
                radial-gradient(
                    circle farthest-side at calc((var(--cursor-x) + 0.2) * 100%)
                        calc((var(--cursor-y) - 0.1) * 100%),
                    hsl(var(--secondary)) 0%,
                    transparent 60%
                ),
                radial-gradient(
                    circle farthest-side at calc((var(--cursor-x) - 0.1) * 100%)
                        calc((var(--cursor-y) + 0.1) * 100%),
                    hsl(var(--tertiary)) 0%,
                    transparent 60%
                );
        }

        > svg {
            position: absolute;
            inset: 0;
            z-index: -1;
        }
    }

    @media only screen and (prefers-color-scheme: dark) {
        blur-background {
            --primary: var(--colors-purple800);
            --secondary: var(--colors-green900);
            --tertiary: var(--colors-blue800);
        }
    }
</style>
