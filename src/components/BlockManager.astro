---
import { PortableText } from "astro-portabletext";
import type { PortableTextProps } from "astro-portabletext/types";
import { mergeComponents } from "astro-portabletext/utils";

import QuoteBlock from "./blocks/BlockQuote.astro";
import CodeBlock from "./blocks/Code.astro";
import ImageBlock from "./blocks/Image.astro";
import LinkBlock from "./blocks/Link.astro";
import PrototypeBlock from "./blocks/Prototype.astro";
import type { s } from "@sanity-typed/schema-builder";
import type { blockContent } from "../../schemas/blockContent";

export interface Props {
    value?: s.infer<typeof blockContent>;
    components?: PortableTextProps["components"];
}

const { value, components: overrideComponents = {} } = Astro.props;

const components = mergeComponents(
    {
        type: {
            image: ImageBlock,
            code: CodeBlock,
            prototype: PrototypeBlock,
        },
        block: {
            blockquote: QuoteBlock,
        },
        list: {},
        mark: {
            link: LinkBlock,
        },
    },
    overrideComponents
);
---

<section>
    {value && <PortableText value={value} components={components} />}
</section>
